{
	"id": 0,
	"name": "@supabase/gotrue-js",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 932,
			"name": "AuthApiError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 933,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 19,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 934,
							"name": "new AuthApiError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 935,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 936,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 932,
								"name": "AuthApiError"
							},
							"overwrites": {
								"type": "reference",
								"id": 927,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 926,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 937,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"overwrites": {
						"type": "reference",
						"id": 930,
						"name": "AuthError.status"
					}
				},
				{
					"id": 938,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 25,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 939,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 940,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 942,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 28,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 941,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 27,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 943,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 29,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												942,
												941,
												943
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						933
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						937
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						938
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 925,
					"name": "AuthError"
				}
			]
		},
		{
			"id": 925,
			"name": "AuthError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 926,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 5,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 927,
							"name": "new AuthError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 928,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 929,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 925,
								"name": "AuthError"
							},
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Error.constructor"
					}
				},
				{
					"id": 930,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						926
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						930
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 1,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Error",
					"package": "typescript",
					"name": "Error"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 932,
					"name": "AuthApiError"
				},
				{
					"type": "reference",
					"id": 945,
					"name": "AuthUnknownError"
				},
				{
					"type": "reference",
					"id": 953,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1005,
			"name": "AuthImplicitGrantRedirectError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1006,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 86,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1007,
							"name": "new AuthImplicitGrantRedirectError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1008,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1009,
									"name": "details",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1010,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1012,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 86,
																	"character": 57
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1011,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 86,
																	"character": 42
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1012,
																1011
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 1005,
								"name": "AuthImplicitGrantRedirectError"
							},
							"overwrites": {
								"type": "reference",
								"id": 955,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 954,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1013,
					"name": "details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 85,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1014,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1016,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 85,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1015,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 85,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1016,
												1015
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 1027,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 959,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1028,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 960,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 1017,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 91,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1018,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1019,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1023,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 96,
													"character": 6
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1024,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 1026,
																	"name": "code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 85,
																			"character": 28
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1025,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 85,
																			"character": 13
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		1026,
																		1025
																	]
																}
															]
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 1021,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 94,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1020,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 93,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1022,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 95,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1023,
												1021,
												1020,
												1022
											]
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 962,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 961,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1006
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1013,
						1027,
						1028
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1017
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 84,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 953,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 992,
			"name": "AuthInvalidCredentialsError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 993,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 79,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 994,
							"name": "new AuthInvalidCredentialsError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 995,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 992,
								"name": "AuthInvalidCredentialsError"
							},
							"overwrites": {
								"type": "reference",
								"id": 955,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 954,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 996,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 959,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 997,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 960,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 998,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 999,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1000,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1002,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 60,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1001,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 59,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1003,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 61,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1002,
												1001,
												1003
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 962,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 961,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						993
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						996,
						997
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						998
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 78,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 953,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 980,
			"name": "AuthInvalidTokenResponseError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 981,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 73,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 982,
							"name": "new AuthInvalidTokenResponseError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"name": "AuthInvalidTokenResponseError"
							},
							"overwrites": {
								"type": "reference",
								"id": 955,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 954,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 983,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 959,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 984,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 960,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 985,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 986,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 987,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 989,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 60,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 988,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 59,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 990,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 61,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												989,
												988,
												990
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 962,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 961,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						981
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						983,
						984
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						985
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 72,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 953,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1030,
			"name": "AuthPKCEGrantCodeExchangeError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1031,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 103,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1032,
							"name": "new AuthPKCEGrantCodeExchangeError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1033,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1034,
									"name": "details",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1035,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1037,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 103,
																	"character": 57
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1036,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 103,
																	"character": 42
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1037,
																1036
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 1030,
								"name": "AuthPKCEGrantCodeExchangeError"
							},
							"overwrites": {
								"type": "reference",
								"id": 955,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 954,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1038,
					"name": "details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 102,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1039,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1041,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 102,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1040,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 102,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1041,
												1040
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 1052,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 959,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1053,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 960,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 1042,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 108,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1043,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1044,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1048,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 113,
													"character": 6
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1049,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 1051,
																	"name": "code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 102,
																			"character": 28
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1050,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 102,
																			"character": 13
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		1051,
																		1050
																	]
																}
															]
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 1046,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 111,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1045,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 110,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1047,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 112,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1048,
												1046,
												1045,
												1047
											]
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 962,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 961,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1031
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1038,
						1052,
						1053
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1042
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 101,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 953,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 1055,
			"name": "AuthRetryableFetchError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1056,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 119,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1057,
							"name": "new AuthRetryableFetchError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1058,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1059,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1055,
								"name": "AuthRetryableFetchError"
							},
							"overwrites": {
								"type": "reference",
								"id": 955,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 954,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 1060,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 959,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 1061,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 960,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 1062,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1063,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1064,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1066,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 60,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1065,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 59,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1067,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 61,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1066,
												1065,
												1067
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 962,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 961,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1056
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1060,
						1061
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1062
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 118,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 953,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 968,
			"name": "AuthSessionMissingError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 969,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 67,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 970,
							"name": "new AuthSessionMissingError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 968,
								"name": "AuthSessionMissingError"
							},
							"overwrites": {
								"type": "reference",
								"id": 955,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 954,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 971,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 959,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 972,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 960,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 973,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 974,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 975,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 977,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 60,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 976,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 59,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 978,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 61,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												977,
												976,
												978
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 962,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 961,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						969
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						971,
						972
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						973
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 66,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 953,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 945,
			"name": "AuthUnknownError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 946,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 41,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 947,
							"name": "new AuthUnknownError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 948,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 949,
									"name": "originalError",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 945,
								"name": "AuthUnknownError"
							},
							"overwrites": {
								"type": "reference",
								"id": 927,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 926,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 950,
					"name": "originalError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 951,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 930,
						"name": "AuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						946
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						950,
						951
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 38,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 925,
					"name": "AuthError"
				}
			]
		},
		{
			"id": 953,
			"name": "CustomAuthError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 954,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 51,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 955,
							"name": "new CustomAuthError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 956,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 957,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 958,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 953,
								"name": "CustomAuthError"
							},
							"overwrites": {
								"type": "reference",
								"id": 927,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 926,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 959,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "AuthError.name"
					}
				},
				{
					"id": 960,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"overwrites": {
						"type": "reference",
						"id": 930,
						"name": "AuthError.status"
					}
				},
				{
					"id": 961,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 962,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 963,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 965,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 60,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 964,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 59,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 966,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 61,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												965,
												964,
												966
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						954
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						959,
						960
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						961
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 48,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 925,
					"name": "AuthError"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 968,
					"name": "AuthSessionMissingError"
				},
				{
					"type": "reference",
					"id": 980,
					"name": "AuthInvalidTokenResponseError"
				},
				{
					"type": "reference",
					"id": 992,
					"name": "AuthInvalidCredentialsError"
				},
				{
					"type": "reference",
					"id": 1005,
					"name": "AuthImplicitGrantRedirectError"
				},
				{
					"type": "reference",
					"id": 1030,
					"name": "AuthPKCEGrantCodeExchangeError"
				},
				{
					"type": "reference",
					"id": 1055,
					"name": "AuthRetryableFetchError"
				}
			]
		},
		{
			"id": 1,
			"name": "GoTrueAdminApi",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 35,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new GoTrueAdminApi",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 11,
													"name": "fetch",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 44,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 12,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 13,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 14,
																			"name": "input",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"qualifiedName": "RequestInfo",
																						"package": "typescript",
																						"name": "RequestInfo"
																					},
																					{
																						"type": "reference",
																						"qualifiedName": "URL",
																						"package": "typescript",
																						"name": "URL"
																					}
																				]
																			}
																		},
																		{
																			"id": 15,
																			"name": "init",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "reference",
																				"qualifiedName": "RequestInit",
																				"package": "typescript",
																				"name": "RequestInit"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"qualifiedName": "Response",
																				"package": "typescript",
																				"name": "Response"
																			}
																		],
																		"qualifiedName": "Promise",
																		"package": "typescript",
																		"name": "Promise"
																	}
																}
															]
														}
													}
												},
												{
													"id": 7,
													"name": "headers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 41,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 8,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"indexSignature": {
																"id": 9,
																"name": "__index",
																"kind": 8192,
																"kindString": "Index signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 10,
																		"name": "key",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													}
												},
												{
													"id": 6,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 40,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														11,
														7,
														6
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 16,
					"name": "mfa",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Contains all MFA administration methods."
					},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 884,
						"name": "GoTrueAdminMFAApi"
					}
				},
				{
					"id": 44,
					"name": "createUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 152,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 45,
							"name": "createUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
							},
							"parameters": [
								{
									"id": 46,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 564,
										"name": "AdminUserAttributes"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 487,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 68,
					"name": "deleteUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 268,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "deleteUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a user. Requires a `service_role` key."
							},
							"parameters": [
								{
									"id": 70,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The user id you want to remove."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 71,
									"name": "shouldSoftDelete",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "If true, then the user will be soft-deleted from the auth schema.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 487,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 41,
					"name": "generateLink",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 118,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 42,
							"name": "generateLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates email links and OTPs to be sent via a custom email provider."
							},
							"parameters": [
								{
									"id": 43,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 728,
										"name": "GenerateLinkParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 729,
										"name": "GenerateLinkResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 61,
					"name": "getUserById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 221,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "getUserById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get user by id."
							},
							"parameters": [
								{
									"id": 63,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 487,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 34,
					"name": "inviteUserByEmail",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 85,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 35,
							"name": "inviteUserByEmail",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends an invite link to an email address."
							},
							"parameters": [
								{
									"id": 36,
									"name": "email",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The email address of the user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Additional options to be included when inviting.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 38,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 39,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column."
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 89,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 40,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 92,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														39,
														40
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 487,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 47,
					"name": "listUsers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 174,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 48,
							"name": "listUsers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of users.",
								"text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
							},
							"parameters": [
								{
									"id": 49,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
									},
									"type": {
										"type": "reference",
										"id": 909,
										"name": "PageParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 50,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 51,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 177,
																	"character": 8
																}
															],
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 52,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 54,
																					"name": "aud",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/GoTrueAdminApi.ts",
																							"line": 177,
																							"character": 31
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 53,
																					"name": "users",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/GoTrueAdminApi.ts",
																							"line": 177,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"id": 535,
																							"name": "User"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						54,
																						53
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"id": 902,
																		"name": "Pagination"
																	}
																]
															}
														},
														{
															"id": 55,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 177,
																	"character": 59
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																51,
																55
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 56,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 57,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 178,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 58,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 59,
																			"name": "users",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueAdminApi.ts",
																					"line": 178,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "tuple"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				59
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 60,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 178,
																	"character": 29
																}
															],
															"type": {
																"type": "reference",
																"id": 925,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																57,
																60
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 27,
					"name": "signOut",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 60,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "signOut",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a logged-in session."
							},
							"parameters": [
								{
									"id": 29,
									"name": "jwt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A valid, logged-in JWT."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The logout sope.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "global"
											},
											{
												"type": "literal",
												"value": "local"
											},
											{
												"type": "literal",
												"value": "others"
											}
										]
									},
									"defaultValue": "'global'"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 31,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 32,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 63,
															"character": 15
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 33,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 63,
															"character": 27
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 925,
																"name": "AuthError"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														32,
														33
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 64,
					"name": "updateUserById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 243,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 65,
							"name": "updateUserById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates the user data."
							},
							"parameters": [
								{
									"id": 66,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 67,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
									},
									"type": {
										"type": "reference",
										"id": 564,
										"name": "AdminUserAttributes"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 487,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						16
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						44,
						68,
						41,
						61,
						34,
						47,
						27,
						64
					]
				}
			],
			"sources": [
				{
					"fileName": "src/GoTrueAdminApi.ts",
					"line": 25,
					"character": 21
				}
			]
		},
		{
			"id": 78,
			"name": "GoTrueClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 80,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 167,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "new GoTrueClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new client for use in the browser."
							},
							"parameters": [
								{
									"id": 82,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 408,
										"name": "GoTrueClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 78,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "admin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Namespace for the GoTrue admin methods.\nThese methods should only be used in a trusted server-side environment."
					},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 117,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "default"
					}
				},
				{
					"id": 85,
					"name": "mfa",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Namespace for the MFA methods."
					},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 839,
						"name": "GoTrueMFAApi"
					}
				},
				{
					"id": 129,
					"name": "exchangeCodeForSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 488,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 130,
							"name": "exchangeCodeForSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user by exchanging an Auth Code issued during the PKCE flow."
							},
							"parameters": [
								{
									"id": 131,
									"name": "authCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 452,
										"name": "AuthTokenResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 149,
					"name": "getSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 797,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "getSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the session, refreshing it if necessary.\nThe session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 151,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 152,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 850,
																	"character": 12
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 153,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 154,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 851,
																					"character": 14
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 498,
																				"name": "Session"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				154
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 155,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 853,
																	"character": 12
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																152,
																155
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 156,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 157,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 856,
																	"character": 12
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 158,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 159,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 857,
																					"character": 14
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				159
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 160,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 859,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"id": 925,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																157,
																160
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 161,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 162,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 862,
																	"character": 12
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 163,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 164,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 863,
																					"character": 14
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				164
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 165,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 865,
																	"character": 12
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																162,
																165
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 212,
					"name": "getUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 990,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 213,
							"name": "getUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current user details if there is an existing session."
							},
							"parameters": [
								{
									"id": 214,
									"name": "jwt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 487,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 116,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 247,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 117,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Initializes the client session either from the url or from storage.\nThis method is automatically called when instantiating the client, but should also be called\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 892,
										"name": "InitializeResult"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 263,
					"name": "onAuthStateChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1318,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 264,
							"name": "onAuthStateChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Receive a notification every time an auth event happens."
							},
							"parameters": [
								{
									"id": 265,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A callback function to be invoked when an auth event happens.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 266,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 267,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 268,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 398,
																"name": "AuthChangeEvent"
															}
														},
														{
															"id": 269,
															"name": "session",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 498,
																		"name": "Session"
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 270,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 271,
											"name": "data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/GoTrueClient.ts",
													"line": 1321,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 272,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 273,
															"name": "subscription",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1321,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"id": 574,
																"name": "Subscription"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																273
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												271
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 144,
					"name": "reauthenticate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 724,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 145,
							"name": "reauthenticate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends a reauthentication OTP to the user's email or phone number.\nRequires the user to be signed-in."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 424,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 234,
					"name": "refreshSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1140,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 235,
							"name": "refreshSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new session, regardless of expiry status.\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\nIf the current session's refresh token is invalid, an error will be thrown."
							},
							"parameters": [
								{
									"id": 236,
									"name": "currentSession",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The current session. If passed in, it must contain a refresh token.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 237,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 238,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1140,
															"character": 42
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														238
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 424,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 146,
					"name": "resend",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 751,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "resend",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP."
							},
							"parameters": [
								{
									"id": 148,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 676,
										"name": "ResendParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 437,
										"name": "AuthOtpResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 277,
					"name": "resetPasswordForEmail",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1369,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 278,
							"name": "resetPasswordForEmail",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends a password reset request to an email address.\nThis method supports the PKCE flow."
							},
							"parameters": [
								{
									"id": 279,
									"name": "email",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The email address of the user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 280,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 281,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 283,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site.\n"
													},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1373,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 282,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The URL to send the user to after they click the password reset link."
													},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1372,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														283,
														282
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 284,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 285,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1377,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 286,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														},
														{
															"id": 287,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1378,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																285,
																287
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 288,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 289,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1380,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 290,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 1380,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"id": 925,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																289,
																290
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 228,
					"name": "setSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1076,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 229,
							"name": "setSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
							},
							"parameters": [
								{
									"id": 230,
									"name": "currentSession",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The current session that minimally contains an access token and refresh token.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 231,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 232,
													"name": "access_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1077,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 233,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1078,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														232,
														233
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 424,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 132,
					"name": "signInWithIdToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 520,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 133,
							"name": "signInWithIdToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Allows signing in with an OIDC ID token. The authentication provider used\nshould be enabled and configured."
							},
							"parameters": [
								{
									"id": 134,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 645,
										"name": "SignInWithIdTokenCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 452,
										"name": "AuthTokenResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 126,
					"name": "signInWithOAuth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 474,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 127,
							"name": "signInWithOAuth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user via a third-party provider.\nThis method supports the PKCE flow."
							},
							"parameters": [
								{
									"id": 128,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 633,
										"name": "SignInWithOAuthCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 465,
										"name": "OAuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 135,
					"name": "signInWithOtp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 577,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 136,
							"name": "signInWithOtp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in a user using magiclink or a one-time password (OTP).",
								"text": "If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\nIf the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\nIf you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n\nBe aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or, that the account\ncan only be accessed via social login.\n\nDo note that you will need to configure a Whatsapp sender on Twilio\nif you are using phone sign in with the 'whatsapp' channel. The whatsapp\nchannel is not supported on other providers\nat this time.\nThis method supports PKCE when an email is passed.\n"
							},
							"parameters": [
								{
									"id": 137,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 615,
										"name": "SignInWithPasswordlessCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 437,
										"name": "AuthOtpResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "signInWithPassword",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 418,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "signInWithPassword",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user with an email and password or phone and password.",
								"text": "Be aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or that the\nemail/phone and password combination is wrong or that the account can only\nbe accessed via social login.\n"
							},
							"parameters": [
								{
									"id": 125,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 601,
										"name": "SignInWithPasswordCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 452,
										"name": "AuthTokenResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 141,
					"name": "signInWithSSO",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 695,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 142,
							"name": "signInWithSSO",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts a single-sign on using an enterprise Identity Provider. A\nsuccessful SSO attempt will redirect the current page to the identity\nprovider authorization page. The redirect URL is implementation and SSO\nprotocol specific.",
								"text": "You can use it by providing a SSO domain. Typically you can extract this\ndomain by asking users for their email address. If this domain is\nregistered on the Auth instance the redirect will use that organization's\ncurrently active SSO Identity Provider for the login.\n\nIf you have built an organization-specific login page, you can use the\norganization's SSO Identity Provider UUID directly instead.\n"
							},
							"parameters": [
								{
									"id": 143,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 690,
										"name": "SignInWithSSO"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 478,
										"name": "SSOResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 258,
					"name": "signOut",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1288,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 259,
							"name": "signOut",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inside a browser context, `signOut()` will remove the logged in user from the browser session\nand log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.",
								"text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n\nIf using others scope, no `SIGNED_OUT` event is fired!\n"
							},
							"parameters": [
								{
									"id": 260,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 913,
										"name": "SignOut"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 261,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 262,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1288,
															"character": 69
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 925,
																"name": "AuthError"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														262
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 120,
					"name": "signUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 339,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "signUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new user.",
								"text": "Be aware that if a user account exists in the system you may get back an\nerror message that attempts to hide this information from the user.\nThis method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n",
								"returns": "A logged-in session if the server has \"autoconfirm\" ON"
							},
							"parameters": [
								{
									"id": 122,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 584,
										"name": "SignUpWithPasswordCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 424,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 339,
					"name": "startAutoRefresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1757,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 340,
							"name": "startAutoRefresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts an auto-refresh process in the background. The session is checked\nevery few seconds. Close to the time of expiration a process is started to\nrefresh the session. If refreshing fails it will be retried for as long as\nnecessary.",
								"text": "If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\nto call this function, it will be called for you.\n\nOn browsers the refresh process works only when the tab/window is in the\nforeground to conserve resources as well as prevent race conditions and\nflooding auth with requests. If you call this method any managed\nvisibility change callback will be removed and you must manage visibility\nchanges on your own.\n\nOn non-browser platforms the refresh process works *continuously* in the\nbackground, which may not be desirable. You should hook into your\nplatform's foreground indication mechanism and call these methods\nappropriately to conserve resources.\n\n{@see #stopAutoRefresh}\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 341,
					"name": "stopAutoRefresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1770,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 342,
							"name": "stopAutoRefresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops an active auto refresh process running in the background (if any).",
								"text": "If you call this method any managed visibility change callback will be\nremoved and you must manage visibility changes on your own.\n\nSee {@link #startAutoRefresh} for more details.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 215,
					"name": "updateUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1021,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "updateUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates user data for a logged in user."
							},
							"parameters": [
								{
									"id": 217,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 558,
										"name": "UserAttributes"
									}
								},
								{
									"id": 218,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 219,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 220,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 1024,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														220
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 487,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 138,
					"name": "verifyOtp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 632,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 139,
							"name": "verifyOtp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in a user given a User supplied OTP received via mobile."
							},
							"parameters": [
								{
									"id": 140,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 654,
										"name": "VerifyOtpParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 424,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						80
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						84,
						85
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						129,
						149,
						212,
						116,
						263,
						144,
						234,
						146,
						277,
						228,
						132,
						126,
						135,
						123,
						141,
						258,
						120,
						339,
						341,
						215,
						138
					]
				}
			],
			"sources": [
				{
					"fileName": "src/GoTrueClient.ts",
					"line": 108,
					"character": 21
				}
			]
		},
		{
			"id": 388,
			"name": "NavigatorLockAcquireTimeoutError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 389,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/locks.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 390,
							"name": "new NavigatorLockAcquireTimeoutError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 391,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 388,
								"name": "NavigatorLockAcquireTimeoutError"
							},
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Error.constructor"
					}
				},
				{
					"id": 392,
					"name": "isAcquireTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/locks.ts",
							"line": 16,
							"character": 18
						}
					],
					"type": {
						"type": "literal",
						"value": true
					},
					"defaultValue": "true"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						389
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						392
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 15,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Error",
					"package": "typescript",
					"name": "Error"
				}
			]
		},
		{
			"id": 507,
			"name": "AMREntry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "An authentication methord reference (AMR) entry.",
				"text": "An entry designates what method was used by the user to verify their\nidentity and at what time.\n",
				"tags": [
					{
						"tag": "see",
						"text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n"
					}
				]
			},
			"children": [
				{
					"id": 508,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Authentication method name."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 509,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Timestamp when the method was successfully used. Represents number of\nseconds since 1st January 1970 (UNIX epoch) in UTC."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 225,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						508,
						509
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 217,
					"character": 17
				}
			]
		},
		{
			"id": 564,
			"name": "AdminUserAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 566,
					"name": "app_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
						"text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 354,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 569,
					"name": "ban_duration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Determines how long a user is banned for.",
						"text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 380,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 572,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's email."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 305,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.email"
					}
				},
				{
					"id": 567,
					"name": "email_confirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Confirms the user's email address if set to true.",
						"text": "Only a service role can modify.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 361,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 571,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
						"text": "Call reauthenticate() to obtain the nonce first.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 322,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.nonce"
					}
				},
				{
					"id": 570,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's password."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 315,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.password"
					}
				},
				{
					"id": 573,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's phone."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 310,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.phone"
					}
				},
				{
					"id": 568,
					"name": "phone_confirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Confirms the user's phone number if set to true.",
						"text": "Only a service role can modify.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 368,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 565,
					"name": "user_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
						"text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 344,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						566,
						569,
						572,
						567,
						571,
						570,
						573,
						568,
						565
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 333,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 558,
							"name": "UserAttributes"
						},
						{
							"type": "literal",
							"value": "data"
						}
					],
					"qualifiedName": "Omit",
					"package": "typescript",
					"name": "Omit"
				}
			]
		},
		{
			"id": 521,
			"name": "Factor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "A MFA factor.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link GoTrueMFAApi#enroll}"
					},
					{
						"tag": "see",
						"text": "{@link GoTrueMFAApi#listFactors}"
					},
					{
						"tag": "see",
						"text": "{@link GoTrueMFAAdminApi#listFactors}\n"
					}
				]
			},
			"children": [
				{
					"id": 526,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 263,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 524,
					"name": "factor_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Type of factor. Only `totp` supported with this version but may change in\nfuture versions."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 258,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 523,
					"name": "friendly_name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 252,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 522,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the factor."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 249,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 525,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Factor's status."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 261,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "verified"
							},
							{
								"type": "literal",
								"value": "unverified"
							}
						]
					}
				},
				{
					"id": 527,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 264,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						526,
						524,
						523,
						522,
						525,
						527
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 247,
					"character": 17
				}
			]
		},
		{
			"id": 725,
			"name": "GenerateLinkOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 726,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
						"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 668,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 727,
					"name": "redirectTo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The URL which will be appended to the email link generated."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 670,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						726,
						727
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 662,
					"character": 17
				}
			]
		},
		{
			"id": 884,
			"name": "GoTrueAdminMFAApi",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Contains the full multi-factor authentication administration API.",
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 888,
					"name": "deleteFactor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 889,
							"name": "deleteFactor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link GoTrueMFAApi#unenroll}\n"
									},
									{
										"tag": "expermental",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 890,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 868,
										"name": "AuthMFAAdminDeleteFactorParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 859,
										"name": "AuthMFAAdminDeleteFactorResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 885,
					"name": "listFactors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 886,
							"name": "listFactors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Lists all factors associated to a user."
							},
							"parameters": [
								{
									"id": 887,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 881,
										"name": "AuthMFAAdminListFactorsParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 872,
										"name": "AuthMFAAdminListFactorsResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						888,
						885
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1000,
					"character": 17
				}
			]
		},
		{
			"id": 839,
			"name": "GoTrueMFAApi",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Contains the full multi-factor authentication API."
			},
			"children": [
				{
					"id": 843,
					"name": "challenge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 844,
							"name": "challenge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
							},
							"parameters": [
								{
									"id": 845,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 763,
										"name": "MFAChallengeParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 807,
										"name": "AuthMFAChallengeResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 852,
					"name": "challengeAndVerify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 853,
							"name": "challengeAndVerify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
							},
							"parameters": [
								{
									"id": 854,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 766,
										"name": "MFAChallengeAndVerifyParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 770,
										"name": "AuthMFAVerifyResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 840,
					"name": "enroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 841,
							"name": "enroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
								"text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
							},
							"parameters": [
								{
									"id": 842,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "MFAEnrollParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 783,
										"name": "AuthMFAEnrollResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 857,
					"name": "getAuthenticatorAssuranceLevel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 858,
							"name": "getAuthenticatorAssuranceLevel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
								"text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 828,
										"name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 855,
					"name": "listFactors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 856,
							"name": "listFactors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of MFA factors enabled for this user.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link GoTrueMFAApi#enroll}"
									},
									{
										"tag": "see",
										"text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
									},
									{
										"tag": "see",
										"text": "{@link GoTrueClient#getUser}\n\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 817,
										"name": "AuthMFAListFactorsResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 849,
					"name": "unenroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 850,
							"name": "unenroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
							},
							"parameters": [
								{
									"id": 851,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 755,
										"name": "MFAUnenrollParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 798,
										"name": "AuthMFAUnenrollResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 846,
					"name": "verify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 847,
							"name": "verify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
							},
							"parameters": [
								{
									"id": 848,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 758,
										"name": "MFAVerifyParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 770,
										"name": "AuthMFAVerifyResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						843,
						852,
						840,
						857,
						855,
						849,
						846
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 887,
					"character": 17
				}
			]
		},
		{
			"id": 498,
			"name": "Session",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 501,
					"name": "access_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 192,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 504,
					"name": "expires_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 204,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 503,
					"name": "expires_in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 200,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 500,
					"name": "provider_refresh_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 188,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 499,
					"name": "provider_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 183,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 502,
					"name": "refresh_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A one-time used refresh token that never expires."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 196,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 505,
					"name": "token_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 205,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 506,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 206,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 535,
						"name": "User"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						501,
						504,
						503,
						500,
						499,
						502,
						505,
						506
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 179,
					"character": 17
				}
			]
		},
		{
			"id": 574,
			"name": "Subscription",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 575,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The subscriber UUID. This will be set by the client."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 387,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 576,
					"name": "callback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 391,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 577,
							"name": "callback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The function to call every time there is an event. eg: (eventName) => {}"
							},
							"parameters": [
								{
									"id": 578,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 398,
										"name": "AuthChangeEvent"
									}
								},
								{
									"id": 579,
									"name": "session",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 498,
												"name": "Session"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 580,
					"name": "unsubscribe",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 395,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 581,
							"name": "unsubscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Call this to remove the listener."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						575
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						576,
						580
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 383,
					"character": 17
				}
			]
		},
		{
			"id": 582,
			"name": "UpdatableFactorAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 583,
					"name": "friendlyName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 399,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						583
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 398,
					"character": 17
				}
			]
		},
		{
			"id": 535,
			"name": "User",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 546,
					"name": "action_link",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 287,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 537,
					"name": "app_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 278,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 528,
						"name": "UserAppMetadata"
					}
				},
				{
					"id": 539,
					"name": "aud",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 280,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 540,
					"name": "confirmation_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 281,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 550,
					"name": "confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 291,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 549,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 290,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 547,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 288,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 542,
					"name": "email_change_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 283,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 551,
					"name": "email_confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 292,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 557,
					"name": "factors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 298,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 521,
							"name": "Factor"
						}
					}
				},
				{
					"id": 536,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 277,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 556,
					"name": "identities",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 297,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 510,
							"name": "UserIdentity"
						}
					}
				},
				{
					"id": 545,
					"name": "invited_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 286,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 553,
					"name": "last_sign_in_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 294,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 543,
					"name": "new_email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 284,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 544,
					"name": "new_phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 285,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 548,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 289,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 552,
					"name": "phone_confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 293,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 541,
					"name": "recovery_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 282,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 554,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 295,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 555,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 296,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 538,
					"name": "user_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 279,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 532,
						"name": "UserMetadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						546,
						537,
						539,
						540,
						550,
						549,
						547,
						542,
						551,
						557,
						536,
						556,
						545,
						553,
						543,
						544,
						548,
						552,
						541,
						554,
						555,
						538
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 276,
					"character": 17
				}
			]
		},
		{
			"id": 528,
			"name": "UserAppMetadata",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 529,
					"name": "provider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 268,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						529
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 267,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 530,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 531,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 558,
			"name": "UserAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 563,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
						"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 330,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 559,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's email."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 305,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 562,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
						"text": "Call reauthenticate() to obtain the nonce first.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 322,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 561,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's password."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 315,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 560,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's phone."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 310,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						563,
						559,
						562,
						561,
						560
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 301,
					"character": 17
				}
			]
		},
		{
			"id": 510,
			"name": "UserIdentity",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 518,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 235,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 511,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 229,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 513,
					"name": "identity_data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 231,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 514,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 515,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 516,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				},
				{
					"id": 519,
					"name": "last_sign_in_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 236,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 517,
					"name": "provider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 234,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 520,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 237,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 512,
					"name": "user_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 230,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						518,
						511,
						513,
						519,
						517,
						520,
						512
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 228,
					"character": 17
				}
			]
		},
		{
			"id": 532,
			"name": "UserMetadata",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 272,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 533,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 534,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 663,
			"name": "VerifyEmailOtpParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 664,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's email address."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 558,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 667,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 563,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 668,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 670,
									"name": "captchaToken",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Verification token received when the user completes the captcha on the site.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 571,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 669,
									"name": "redirectTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A URL to send the user to after they are confirmed."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 565,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										670,
										669
									]
								}
							]
						}
					}
				},
				{
					"id": 665,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The otp sent to the user's email address."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 560,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 666,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's verification type."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 562,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 675,
						"name": "EmailOtpType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						664,
						667,
						665,
						666
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 556,
					"character": 17
				}
			]
		},
		{
			"id": 655,
			"name": "VerifyMobileOtpParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 659,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 544,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 660,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 662,
									"name": "captchaToken",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Verification token received when the user completes the captcha on the site.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 553,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 661,
									"name": "redirectTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A URL to send the user to after they are confirmed."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 546,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										662,
										661
									]
								}
							]
						}
					}
				},
				{
					"id": 656,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's phone number."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 539,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 657,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The otp sent to the user's phone number."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 541,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 658,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's verification type."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 543,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 674,
						"name": "MobileOtpType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						659,
						656,
						657,
						658
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 537,
					"character": 17
				}
			]
		},
		{
			"id": 671,
			"name": "VerifyTokenHashParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 672,
					"name": "token_hash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The token hash used in an email link"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 577,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 673,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's verification type."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 580,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 675,
						"name": "EmailOtpType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						672,
						673
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 575,
					"character": 17
				}
			]
		},
		{
			"id": 398,
			"name": "AuthChangeEvent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 28,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "INITIAL_SESSION"
					},
					{
						"type": "literal",
						"value": "PASSWORD_RECOVERY"
					},
					{
						"type": "literal",
						"value": "SIGNED_IN"
					},
					{
						"type": "literal",
						"value": "SIGNED_OUT"
					},
					{
						"type": "literal",
						"value": "TOKEN_REFRESHED"
					},
					{
						"type": "literal",
						"value": "USER_UPDATED"
					},
					{
						"type": "reference",
						"id": 397,
						"name": "AuthChangeEventMFA"
					}
				]
			}
		},
		{
			"id": 397,
			"name": "AuthChangeEventMFA",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 26,
					"character": 12
				}
			],
			"type": {
				"type": "literal",
				"value": "MFA_CHALLENGE_VERIFIED"
			}
		},
		{
			"id": 632,
			"name": "AuthFlowType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 505,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "implicit"
					},
					{
						"type": "literal",
						"value": "pkce"
					}
				]
			}
		},
		{
			"id": 868,
			"name": "AuthMFAAdminDeleteFactorParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 966,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 869,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 870,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the MFA factor to delete."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 968,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 871,
							"name": "userId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the user whose factor is being deleted."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 971,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								870,
								871
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 966,
							"character": 45
						}
					]
				}
			}
		},
		{
			"id": 859,
			"name": "AuthMFAAdminDeleteFactorResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 953,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 860,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 861,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 955,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 862,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 863,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was successfully deleted."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 957,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														863
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 955,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 864,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 959,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										861,
										864
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 954,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 865,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 866,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 961,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 867,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 961,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										866,
										867
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 961,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 881,
			"name": "AuthMFAAdminListFactorsParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 990,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 882,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 883,
							"name": "userId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the user."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 992,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								883
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 990,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 872,
			"name": "AuthMFAAdminListFactorsResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 977,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 873,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 874,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 979,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 875,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 876,
													"name": "factors",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "All factors attached to the user."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 981,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 521,
															"name": "Factor"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														876
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 979,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 877,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 983,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										874,
										877
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 978,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 878,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 879,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 985,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 880,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 985,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										879,
										880
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 985,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 807,
			"name": "AuthMFAChallengeResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 830,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 808,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 809,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 832,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 810,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 812,
													"name": "expires_at",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Timestamp in UNIX seconds when this challenge will no longer be usable."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 837,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 811,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the newly created challenge."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 834,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														812,
														811
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 832,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 813,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 839,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										809,
										813
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 831,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 814,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 815,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 841,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 816,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 841,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										815,
										816
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 841,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 783,
			"name": "AuthMFAEnrollResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 787,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 784,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 785,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 789,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 786,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 787,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was just enrolled (in an unverified state)."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 791,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 789,
													"name": "totp",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "TOTP enrollment information."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 797,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 790,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 791,
																	"name": "qr_code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"comment": {
																		"shortText": "Contains a QR code encoding the authenticator URI. You can\nconvert it to a URL by prepending `data:image/svg+xml;utf-8,` to\nthe value. Avoid logging this value to the console."
																	},
																	"sources": [
																		{
																			"fileName": "src/lib/types.ts",
																			"line": 801,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 792,
																	"name": "secret",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"comment": {
																		"shortText": "The TOTP secret (also encoded in the QR code). Show this secret\nin a password-style field to the user, in case they are unable to\nscan the QR code. Avoid logging this value to the console."
																	},
																	"sources": [
																		{
																			"fileName": "src/lib/types.ts",
																			"line": 806,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 793,
																	"name": "uri",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"comment": {
																		"shortText": "The authenticator URI encoded within the QR code, should you need\nto use it. Avoid loggin this value to the console."
																	},
																	"sources": [
																		{
																			"fileName": "src/lib/types.ts",
																			"line": 810,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		791,
																		792,
																		793
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/lib/types.ts",
																	"line": 797,
																	"character": 14
																}
															]
														}
													}
												},
												{
													"id": 788,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Type of MFA factor. Only `totp` supported for now."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 794,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": "totp"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														787,
														789,
														788
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 789,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 794,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 813,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										785,
										794
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 788,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 795,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 796,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 816,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 797,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 817,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										796,
										797
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 815,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 828,
			"name": "AuthMFAGetAuthenticatorAssuranceLevelResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 858,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 829,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 830,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 860,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 831,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 834,
													"name": "currentAuthenticationMethods",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "A list of all authentication methods attached to this session. Use\nthe information here to detect the last time a user verified a\nfactor, for example if implementing a step-up scenario."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 877,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 507,
															"name": "AMREntry"
														}
													}
												},
												{
													"id": 832,
													"name": "currentLevel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Current AAL level of the session."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 862,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 827,
																"name": "AuthenticatorAssuranceLevels"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 833,
													"name": "nextLevel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Next possible AAL level for the session. If the next level is higher\nthan the current one, the user should go through MFA.",
														"tags": [
															{
																"tag": "see",
																"text": "{@link GoTrueMFAApi#challenge}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 870,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 827,
																"name": "AuthenticatorAssuranceLevels"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														834,
														832,
														833
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 860,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 835,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 879,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										830,
										835
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 859,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 836,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 837,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 881,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 838,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 881,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										837,
										838
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 881,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 817,
			"name": "AuthMFAListFactorsResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 843,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 818,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 819,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 845,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 820,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 821,
													"name": "all",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "All available factors (verified and unverified)."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 847,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 521,
															"name": "Factor"
														}
													}
												},
												{
													"id": 822,
													"name": "totp",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Only verified TOTP factors. (A subset of `all`.)"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 850,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 521,
															"name": "Factor"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														821,
														822
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 845,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 823,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 852,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										819,
										823
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 844,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 824,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 825,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 854,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 826,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 854,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										825,
										826
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 854,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 798,
			"name": "AuthMFAUnenrollResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 820,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 799,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 800,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 822,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 801,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 802,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was successfully unenrolled."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 824,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														802
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 822,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 803,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 826,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										800,
										803
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 821,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 804,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 805,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 828,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 806,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 828,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										805,
										806
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 828,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 770,
			"name": "AuthMFAVerifyResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 762,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 771,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 772,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 764,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 773,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 774,
													"name": "access_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "New access token (JWT) after successful verification."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 766,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 776,
													"name": "expires_in",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Number of seconds in which the access token will expire."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 772,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 777,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Refresh token you can use to obtain new access tokens when expired."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 775,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 775,
													"name": "token_type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Type of token, typically `Bearer`."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 769,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 778,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Updated user profile."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 778,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 535,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														774,
														776,
														777,
														775,
														778
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 764,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 779,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 780,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										772,
										779
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 763,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 780,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 781,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 783,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 782,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 784,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										781,
										782
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 782,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 437,
			"name": "AuthOtpResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "AuthOtpResponse is returned when OTP is used.",
				"text": "{@see AuthRsponse}\n"
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 104,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 438,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 439,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 106,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 440,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 443,
													"name": "messageId",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 106,
															"character": 41
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 442,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 106,
															"character": 26
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 441,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 106,
															"character": 14
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														443,
														442,
														441
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 106,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 444,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 107,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										439,
										444
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 105,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 445,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 446,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 110,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 447,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 450,
													"name": "messageId",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 110,
															"character": 41
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 449,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 110,
															"character": 26
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 448,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 110,
															"character": 14
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														450,
														449,
														448
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 110,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 451,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 111,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										446,
										451
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 109,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 424,
			"name": "AuthResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 83,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 425,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 426,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 85,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 427,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 429,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 87,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 498,
																"name": "Session"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 428,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 86,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 535,
																"name": "User"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														429,
														428
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 85,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 430,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 89,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										426,
										430
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 84,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 431,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 432,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 92,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 433,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 435,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 94,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 434,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 93,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														435,
														434
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 92,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 436,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 96,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										432,
										436
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 91,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 452,
			"name": "AuthTokenResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 114,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 453,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 454,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 116,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 455,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 457,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 118,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 498,
														"name": "Session"
													}
												},
												{
													"id": 456,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 117,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 535,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														457,
														456
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 116,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 458,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 120,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										454,
										458
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 115,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 459,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 460,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 123,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 461,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 463,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 125,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 462,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 124,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														463,
														462
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 123,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 464,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 127,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										460,
										464
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 122,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 827,
			"name": "AuthenticatorAssuranceLevels",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 856,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "aal1"
					},
					{
						"type": "literal",
						"value": "aal2"
					}
				]
			}
		},
		{
			"id": 895,
			"name": "CallRefreshTokenResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1031,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 896,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 898,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1034,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 897,
									"name": "session",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1033,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 498,
										"name": "Session"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										898,
										897
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1032,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 899,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 901,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1038,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								},
								{
									"id": 900,
									"name": "session",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 1037,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										901,
										900
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1036,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 675,
			"name": "EmailOtpType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 584,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "signup"
					},
					{
						"type": "literal",
						"value": "invite"
					},
					{
						"type": "literal",
						"value": "magiclink"
					},
					{
						"type": "literal",
						"value": "recovery"
					},
					{
						"type": "literal",
						"value": "email_change"
					},
					{
						"type": "literal",
						"value": "email"
					}
				]
			}
		},
		{
			"id": 719,
			"name": "GenerateEmailChangeLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 651,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 720,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 722,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's email"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 654,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 723,
							"name": "newEmail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 658,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 724,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 659,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 725,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "literal",
										"value": "redirectTo"
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 721,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 652,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "email_change_current"
									},
									{
										"type": "literal",
										"value": "email_change_new"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								722,
								723,
								724,
								721
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 651,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 709,
			"name": "GenerateInviteOrMagiclinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 637,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 710,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 712,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's email"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 640,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 713,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 641,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 725,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "data"
											},
											{
												"type": "literal",
												"value": "redirectTo"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 711,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 638,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "invite"
									},
									{
										"type": "literal",
										"value": "magiclink"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								712,
								713,
								711
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 637,
							"character": 46
						}
					]
				}
			}
		},
		{
			"id": 728,
			"name": "GenerateLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 673,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 703,
						"name": "GenerateSignupLinkParams"
					},
					{
						"type": "reference",
						"id": 709,
						"name": "GenerateInviteOrMagiclinkParams"
					},
					{
						"type": "reference",
						"id": 714,
						"name": "GenerateRecoveryLinkParams"
					},
					{
						"type": "reference",
						"id": 719,
						"name": "GenerateEmailChangeLinkParams"
					}
				]
			}
		},
		{
			"id": 742,
			"name": "GenerateLinkProperties",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "The properties related to the email link generated"
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 696,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 743,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 744,
							"name": "action_link",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The email link to send to the user.\nThe action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 701,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 745,
							"name": "email_otp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The raw email OTP.\nYou should send this in the email if you want your users to verify using an OTP instead of the action link."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 706,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 746,
							"name": "hashed_token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The hashed token appended to the action link."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 710,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 747,
							"name": "redirect_to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The URL appended to the action link."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 712,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 748,
							"name": "verification_type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The verification type that the email link is associated to."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 714,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 749,
								"name": "GenerateLinkType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								744,
								745,
								746,
								747,
								748
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 696,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 729,
			"name": "GenerateLinkResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 679,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 730,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 731,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 681,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 732,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 733,
													"name": "properties",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 682,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 742,
														"name": "GenerateLinkProperties"
													}
												},
												{
													"id": 734,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 683,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 535,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														733,
														734
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 681,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 735,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 685,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										731,
										735
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 680,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 736,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 737,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 688,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 738,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 739,
													"name": "properties",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 689,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 740,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 690,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														739,
														740
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 688,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 741,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 692,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										737,
										741
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 687,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 749,
			"name": "GenerateLinkType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 717,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "signup"
					},
					{
						"type": "literal",
						"value": "invite"
					},
					{
						"type": "literal",
						"value": "magiclink"
					},
					{
						"type": "literal",
						"value": "recovery"
					},
					{
						"type": "literal",
						"value": "email_change_current"
					},
					{
						"type": "literal",
						"value": "email_change_new"
					}
				]
			}
		},
		{
			"id": 714,
			"name": "GenerateRecoveryLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 644,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 715,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 717,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's email"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 647,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 718,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 648,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 725,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "literal",
										"value": "redirectTo"
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 716,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 645,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "recovery"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								717,
								718,
								716
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 644,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 703,
			"name": "GenerateSignupLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 630,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 704,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 706,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 632,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 708,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 634,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 725,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "data"
											},
											{
												"type": "literal",
												"value": "redirectTo"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 707,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 633,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 705,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 631,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "signup"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								706,
								708,
								707,
								705
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 630,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 408,
			"name": "GoTrueClientOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 54,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 409,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 417,
							"name": "autoRefreshToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 422,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 416,
							"name": "detectSessionInUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 420,
							"name": "fetch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Fetch"
							}
						},
						{
							"id": 421,
							"name": "flowType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 632,
								"name": "AuthFlowType"
							}
						},
						{
							"id": 411,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 412,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 58,
											"character": 12
										}
									],
									"indexSignature": {
										"id": 413,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 414,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 423,
							"name": "lock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 80,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 399,
								"name": "LockFunc"
							}
						},
						{
							"id": 418,
							"name": "persistSession",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 419,
							"name": "storage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 891,
								"name": "SupportedStorage"
							}
						},
						{
							"id": 415,
							"name": "storageKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 410,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								417,
								422,
								416,
								420,
								421,
								411,
								423,
								418,
								419,
								415,
								410
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 54,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 892,
			"name": "InitializeResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1029,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 893,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 894,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1029,
									"character": 33
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								894
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1029,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 399,
			"name": "LockFunc",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 52,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 400,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 52,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 401,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 407,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 402,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of the lock to be acquired."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 403,
									"name": "acquireTimeout",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 404,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The operation to execute when the lock is acquired.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 405,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 52,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 406,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 407,
																"name": "R"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 407,
										"name": "R"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 766,
			"name": "MFAChallengeAndVerifyParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 755,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 767,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 769,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Verification code provided by the user."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 759,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 768,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor being verified. Returned in enroll()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 757,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								769,
								768
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 755,
							"character": 42
						}
					]
				}
			}
		},
		{
			"id": 763,
			"name": "MFAChallengeParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 750,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 764,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 765,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor to be challenged. Returned in enroll()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 752,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								765
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 750,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 750,
			"name": "MFAEnrollParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 725,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 751,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 752,
							"name": "factorType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The type of factor being enrolled."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 727,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "totp"
							}
						},
						{
							"id": 754,
							"name": "friendlyName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Human readable name assigned to the factor."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 731,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 753,
							"name": "issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Domain which the user is enrolled with."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 729,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								752,
								754,
								753
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 725,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 755,
			"name": "MFAUnenrollParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 734,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 756,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 757,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor being unenrolled."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 736,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								757
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 734,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 758,
			"name": "MFAVerifyParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 739,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 759,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 761,
							"name": "challengeId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the challenge being verified. Returned in challenge()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 744,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 762,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Verification code provided by the user."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 747,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 760,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor being verified. Returned in enroll()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 741,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								761,
								762,
								760
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 739,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 674,
			"name": "MobileOtpType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 583,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "sms"
					},
					{
						"type": "literal",
						"value": "phone_change"
					}
				]
			}
		},
		{
			"id": 465,
			"name": "OAuthResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 130,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 466,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 467,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 132,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 468,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 469,
													"name": "provider",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 133,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 396,
														"name": "Provider"
													}
												},
												{
													"id": 470,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 134,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														469,
														470
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 132,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 471,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 136,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										467,
										471
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 131,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 472,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 473,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 139,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 474,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 475,
													"name": "provider",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 140,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 396,
														"name": "Provider"
													}
												},
												{
													"id": 476,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 141,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														475,
														476
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 139,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 477,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 143,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										473,
										477
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 138,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 909,
			"name": "PageParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1048,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 910,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 911,
							"name": "page",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The page number"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1050,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 912,
							"name": "perPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Number of items returned per page"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1052,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								911,
								912
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1048,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 902,
			"name": "Pagination",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1041,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 903,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 905,
							"name": "lastPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1044,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 904,
							"name": "nextPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1043,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 906,
							"name": "total",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1045,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								905,
								904,
								906
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1041,
							"character": 25
						}
					],
					"indexSignature": {
						"id": 907,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 908,
								"name": "key",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			}
		},
		{
			"id": 396,
			"name": "Provider",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "One of the providers supported by GoTrue."
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "apple"
					},
					{
						"type": "literal",
						"value": "azure"
					},
					{
						"type": "literal",
						"value": "bitbucket"
					},
					{
						"type": "literal",
						"value": "discord"
					},
					{
						"type": "literal",
						"value": "facebook"
					},
					{
						"type": "literal",
						"value": "figma"
					},
					{
						"type": "literal",
						"value": "github"
					},
					{
						"type": "literal",
						"value": "gitlab"
					},
					{
						"type": "literal",
						"value": "google"
					},
					{
						"type": "literal",
						"value": "kakao"
					},
					{
						"type": "literal",
						"value": "keycloak"
					},
					{
						"type": "literal",
						"value": "linkedin"
					},
					{
						"type": "literal",
						"value": "notion"
					},
					{
						"type": "literal",
						"value": "slack"
					},
					{
						"type": "literal",
						"value": "spotify"
					},
					{
						"type": "literal",
						"value": "twitch"
					},
					{
						"type": "literal",
						"value": "twitter"
					},
					{
						"type": "literal",
						"value": "workos"
					},
					{
						"type": "literal",
						"value": "zoom"
					}
				]
			}
		},
		{
			"id": 676,
			"name": "ResendParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 586,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 677,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 679,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 589,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 680,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 590,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 681,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 683,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 594,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 682,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A URL to send the user to after they have signed-in."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 592,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														683,
														682
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 590,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 678,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 588,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 675,
												"name": "EmailOtpType"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "signup"
													},
													{
														"type": "literal",
														"value": "email_change"
													}
												]
											}
										],
										"qualifiedName": "Extract",
										"package": "typescript",
										"name": "Extract"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										679,
										680,
										678
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 587,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 684,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 687,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 600,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 688,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 689,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 602,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														689
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 600,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 686,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 599,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 685,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 598,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 674,
												"name": "MobileOtpType"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "sms"
													},
													{
														"type": "literal",
														"value": "phone_change"
													}
												]
											}
										],
										"qualifiedName": "Extract",
										"package": "typescript",
										"name": "Extract"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										687,
										686,
										685
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 597,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 478,
			"name": "SSOResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 146,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 479,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 480,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 148,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 481,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 482,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "URL to open in a browser which will complete the sign-in flow by\ntaking the user to the identity provider's authentication flow.",
														"text": "On browsers you can set the URL to `window.location.href` to take\nthe user to the authentication flow.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 156,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														482
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 148,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 483,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 158,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										480,
										483
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 147,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 484,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 485,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 161,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 486,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 162,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										485,
										486
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 160,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 645,
			"name": "SignInWithIdTokenCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 521,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 646,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 649,
							"name": "access_token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the ID token contains an `at_hash` claim, then the hash of this value is compared to the value in the ID token."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 527,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 650,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the ID token contains a `nonce` claim, then the hash of this value is compared to the value in the ID token."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 529,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 651,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 530,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 652,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 653,
											"name": "captchaToken",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Verification token received when the user completes the captcha on the site."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 532,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												653
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 530,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 647,
							"name": "provider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Provider name or OIDC `iss` value identifying which provider should be used to verify the provided token. Supported names: `google`, `apple`, `azure`, `facebook`, `keycloak` (deprecated)."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 523,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "google"
									},
									{
										"type": "literal",
										"value": "apple"
									},
									{
										"type": "literal",
										"value": "azure"
									},
									{
										"type": "literal",
										"value": "facebook"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 648,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "OIDC ID token issued by the specified provider. The `iss` claim in the ID token must match the supplied provider. Some ID tokens contain an `at_hash` which require that you provide an `access_token` value to be accepted properly. If the token contains a `nonce` claim you must supply the nonce used to obtain the ID token."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 525,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								649,
								650,
								651,
								647,
								648
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 521,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 633,
			"name": "SignInWithOAuthCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 506,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 634,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 636,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 509,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 637,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 640,
											"name": "queryParams",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "An object of query params"
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 515,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 641,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 515,
															"character": 18
														}
													],
													"indexSignature": {
														"id": 642,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 643,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										},
										{
											"id": 638,
											"name": "redirectTo",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A URL to send the user to after they are confirmed."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 511,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 639,
											"name": "scopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A space-separated list of scopes granted to the OAuth application."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 513,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 644,
											"name": "skipBrowserRedirect",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 517,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												640,
												638,
												639,
												644
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 509,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 635,
							"name": "provider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "One of the providers supported by GoTrue."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 508,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 396,
								"name": "Provider"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								636,
								635
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 506,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 601,
			"name": "SignInWithPasswordCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 439,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 602,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 603,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's email address."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 442,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 605,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 445,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 606,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 607,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 447,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														607
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 445,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 604,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 444,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										603,
										605,
										604
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 440,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 608,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 611,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 455,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 612,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 614,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 463,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 613,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 461,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														614,
														613
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 455,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 610,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 454,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 609,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's phone number."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 452,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										611,
										610,
										609
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 450,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 615,
			"name": "SignInWithPasswordlessCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 467,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 616,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 617,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's email address."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 470,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 618,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 471,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 619,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 623,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 483,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 622,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 481,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 620,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The redirect url embedded in the email link"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 473,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 621,
													"name": "shouldCreateUser",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "If set to false, this method will not create a new user. Defaults to true."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 475,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														623,
														622,
														620,
														621
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 471,
													"character": 16
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										617,
										618
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 468,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 624,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 626,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 489,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 627,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 630,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 499,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 631,
													"name": "channel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Messaging channel to use (e.g. whatsapp or sms)"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 501,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sms"
															},
															{
																"type": "literal",
																"value": "whatsapp"
															}
														]
													}
												},
												{
													"id": 629,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 497,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 628,
													"name": "shouldCreateUser",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "If set to false, this method will not create a new user. Defaults to true."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 491,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														630,
														631,
														629,
														628
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 489,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 625,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's phone number."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 488,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										626,
										625
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 486,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 690,
			"name": "SignInWithSSO",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 606,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 691,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 693,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 611,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 694,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 696,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 615,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 695,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A URL to send the user to after they have signed-in."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 613,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														696,
														695
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 611,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 692,
									"name": "providerId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "UUID of the SSO provider to invoke single-sign on to."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 609,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										693,
										692
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 607,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 697,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 698,
									"name": "domain",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Domain name of the organization for which to invoke single-sign on."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 620,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 699,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 622,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 700,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 702,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 626,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 701,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A URL to send the user to after they have signed-in."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 624,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														702,
														701
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 622,
													"character": 16
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										698,
										699
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 618,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 913,
			"name": "SignOut",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1055,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 914,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 915,
							"name": "scope",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines which sessions should be\nlogged out. Global means all\nsessions by this account. Local\nmeans only this session. Others\nmeans all other sessions except the\ncurrent one. When using others,\nthere is no sign-out event fired on\nthe current session!"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 1066,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "global"
									},
									{
										"type": "literal",
										"value": "local"
									},
									{
										"type": "literal",
										"value": "others"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								915
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1055,
							"character": 22
						}
					]
				}
			}
		},
		{
			"id": 584,
			"name": "SignUpWithPasswordCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 402,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 585,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 586,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's email address."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 405,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 588,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 408,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 589,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 592,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 418,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 591,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 416,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 590,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The redirect url embedded in the email link"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 410,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														592,
														591,
														590
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 408,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 587,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 407,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										586,
										588,
										587
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 403,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 593,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 596,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 426,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 597,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 599,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 434,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 600,
													"name": "channel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Messaging channel to use (e.g. whatsapp or sms)"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 436,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sms"
															},
															{
																"type": "literal",
																"value": "whatsapp"
															}
														]
													}
												},
												{
													"id": 598,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 432,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														599,
														600,
														598
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 426,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 595,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 425,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 594,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's phone number."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 423,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										596,
										595,
										594
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 421,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 891,
			"name": "SupportedStorage",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 1027,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"qualifiedName": "Storage",
								"package": "typescript",
								"name": "Storage"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "getItem"
									},
									{
										"type": "literal",
										"value": "setItem"
									},
									{
										"type": "literal",
										"value": "removeItem"
									}
								]
							}
						],
						"qualifiedName": "Pick",
						"package": "typescript",
						"name": "Pick"
					}
				],
				"name": "PromisifyMethods"
			}
		},
		{
			"id": 487,
			"name": "UserResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 165,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 488,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 489,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 167,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 490,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 491,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 168,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 535,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														491
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 167,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 492,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 170,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										489,
										492
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 166,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 493,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 494,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 173,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 495,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 496,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 174,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														496
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 173,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 497,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 176,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 925,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										494,
										497
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 172,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 654,
			"name": "VerifyOtpParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 536,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 655,
						"name": "VerifyMobileOtpParams"
					},
					{
						"type": "reference",
						"id": 663,
						"name": "VerifyEmailOtpParams"
					},
					{
						"type": "reference",
						"id": 671,
						"name": "VerifyTokenHashParams"
					}
				]
			}
		},
		{
			"id": 393,
			"name": "lockInternals",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"tags": [
					{
						"tag": "experimental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 4,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 394,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 395,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/locks.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "!!(\n    globalThis &&\n    globalThis.localStorage &&\n    globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'\n  )"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								395
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 919,
			"name": "isAuthApiError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 34,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 920,
					"name": "isAuthApiError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 921,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 932,
							"name": "AuthApiError"
						}
					}
				}
			]
		},
		{
			"id": 916,
			"name": "isAuthError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 12,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 917,
					"name": "isAuthError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 918,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 925,
							"name": "AuthError"
						}
					}
				}
			]
		},
		{
			"id": 922,
			"name": "isAuthRetryableFetchError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 124,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 923,
					"name": "isAuthRetryableFetchError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 924,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 1055,
							"name": "AuthRetryableFetchError"
						}
					}
				}
			]
		},
		{
			"id": 380,
			"name": "navigatorLock",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/locks.ts",
					"line": 50,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 381,
					"name": "navigatorLock",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Implements a global exclusive lock using the Navigator LockManager API. It\nis available on all browsers released after 2022-03-15 with Safari being the\nlast one to release support. If the API is not available, this function will\nthrow. Make sure you check availablility before configuring {@link\nGoTrueClient}.",
						"text": "You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\nlocal storage item to `true`.\n\nInternals:\n\nSince the LockManager API does not preserve stack traces for the async\nfunction passed in the `request` method, a trick is used where acquiring the\nlock releases a previously started promise to run the operation in the `fn`\nfunction. The lock waits for that promise to finish (with or without error),\nwhile the function will finally wait for the result anyway.\n",
						"tags": [
							{
								"tag": "experimental",
								"text": "\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 382,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 383,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Name of the lock to be acquired."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 384,
							"name": "acquireTimeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "If negative, no timeout. If 0 an error is thrown if\n                      the lock can't be acquired without waiting. If positive, the lock acquire\n                      will time out after so many milliseconds. An error is\n                      a timeout if it has `isAcquireTimeout` set to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 385,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The operation to run once the lock is acquired.\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 386,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 387,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 382,
														"name": "R"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 382,
								"name": "R"
							}
						],
						"qualifiedName": "Promise",
						"package": "typescript",
						"name": "Promise"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				932,
				925,
				1005,
				992,
				980,
				1030,
				1055,
				968,
				945,
				953,
				1,
				78,
				388
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				507,
				564,
				521,
				725,
				884,
				839,
				498,
				574,
				582,
				535,
				528,
				558,
				510,
				532,
				663,
				655,
				671
			]
		},
		{
			"title": "Type Aliases",
			"kind": 4194304,
			"children": [
				398,
				397,
				632,
				868,
				859,
				881,
				872,
				807,
				783,
				828,
				817,
				798,
				770,
				437,
				424,
				452,
				827,
				895,
				675,
				719,
				709,
				728,
				742,
				729,
				749,
				714,
				703,
				408,
				892,
				399,
				766,
				763,
				750,
				755,
				758,
				674,
				465,
				909,
				902,
				396,
				676,
				478,
				645,
				633,
				601,
				615,
				690,
				913,
				584,
				891,
				487,
				654
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				393
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				919,
				916,
				922,
				380
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}